#!/bin/sh
# Copyright (C) 2015 PIVA Software <www.pivasoftware.com>
# 	Author: MOHAMED Kallel <mohamed.kallel@pivasoftware.com>

#############################
#   Entry point functuons   #
#############################

CWMP_LAN_IF="br-lan"

prefix_list="$prefix_list $DMROOT.LANDevice."
entry_execute_method_list="$entry_execute_method_list entry_execute_method_root_LANDevice"

entry_execute_method_root_LANDevice() {
	case "$1" in ""|"$DMROOT."|"$DMROOT.LANDevice."*)
		common_execute_method_obj "$DMROOT.LANDevice." "0"
		common_execute_method_obj "$DMROOT.LANDevice.1." "0" "" "" "lan_device_browse_instances_LAN_Ethernet_Interface_Number_Of_Entries $1"

		common_execute_method_obj "$DMROOT.LANDevice.1.LANHost." "0" 
		common_execute_method_param "$DMROOT.LANDevice.1.LANHost.LocalAddresses" "0" "" "" "" 

		common_execute_method_obj "$DMROOT.LANDevice.1.WLANConfiguration." "1" "lan_device_add_wlan_iface" "" "lan_device_browse_instances_wlan_iface $1"
		common_execute_method_obj "$DMROOT.LANDevice.1.Hosts." "0"
		common_execute_method_obj "$DMROOT.LANDevice.1.Hosts.LANInterfaces." "0"
		common_execute_method_param "$DMROOT.LANDevice.1.Hosts.LANInterfaces.LANEthernetInterfaceNumberOfEntries" "0" "get_lan_device_lan_ethernet_number_of_entries" "" "" 
		common_execute_method_param "$DMROOT.LANDevice.1.Hosts.LANInterfaces.LANWLANConfigurationNumberOfEntries" "0" "get_lan_device_wlan_number_of_entries" "" "" 

		common_execute_method_obj "$DMROOT.LANDevice.1.Hosts.Host." "0" "" "" "lan_device_browse_instances_Hosts_Host $1"
		common_execute_method_obj "$DMROOT.LANDevice.1.LANEthernetInterfaceConfig." "0" "" "" "lan_device_browse_instances_LAN_Ethernet_Interface_Config $1"
		common_execute_method_obj "$DMROOT.LANDevice.1.LANEthernetInterfaceConfig.1." "0" "" "" "lan_device_browse_instances_LAN_Ethernet_Interface_Config_Stats $1"
		common_execute_method_obj "$DMROOT.LANDevice.1.LANHostConfigManagement." "0" "" "" "lan_device_browse_instances_LAN_Host_Config_Management $1"
		common_execute_method_obj "$DMROOT.LANDevice.1.LANHostConfigManagement.IPInterface.1." "0" "" "" "lan_device_browse_instances_LAN_Host_Config_Management_Ip_Interface $1"
		return 0
		;;
	esac
	return $E_INVALID_PARAMETER_NAME;
}

sub_entry_landevic_LAN_Ethernet_Interface_Number_Of_Entries() {
	local j="$2"
	local iface="$3"
	case_param "$1" belongto "$DMROOT.LANDevice.1." && {
		common_execute_method_obj "$DMROOT.LANDevice.1." "0" "" ""
		common_execute_method_param "$DMROOT.LANDevice.1.LANEthernetInterfaceNumberOfEntries" "0" "get_lan_device_lan_ethernet_interface_number_of_entries" "" "" "1"
		common_execute_method_param "$DMROOT.LANDevice.1.LANWLANConfigurationNumberOfEntries" "0" "get_lan_device_lan_wlan_configuration_number_of_entries" "" "" "1"
		return 0
	}
	return $E_INVALID_PARAMETER_NAME;
}


sub_entry_landevice_wlanconfig() {
	local j="$2"
	local iface="$3"
	case_param "$1" belongto "$DMROOT.LANDevice.1.WLANConfiguration.$j." && {
		common_execute_method_obj "$DMROOT.LANDevice.1.WLANConfiguration.$j." "1" "" "lan_device_delete_wlan_iface $iface"
		common_execute_method_param "$DMROOT.LANDevice.1.WLANConfiguration.$j.Enable" "1" "lan_device_get_wlan_enable" "lan_device_set_wlan_enable" "xsd:boolean"
		common_execute_method_param "$DMROOT.LANDevice.1.WLANConfiguration.$j.SSID" "1" "$UCI_GET wireless.$iface.ssid" "lan_device_set_wlan_cfg wireless.$iface.ssid"
		return 0
	}
	return $E_INVALID_PARAMETER_NAME;
}

sub_entry_landevice_Hosts_Host() {
	return 0;
}

sub_entry_landevice_LAN_Ethernet_Interface_Config() {
	local j="$2"
	local iface="$3"
	case_param "$1" belongto "$DMROOT.LANDevice.1.LANEthernetInterfaceConfig.1." && {
		common_execute_method_obj "$DMROOT.LANDevice.1.LANEthernetInterfaceConfig.1." "0" "" ""
		common_execute_method_param "$DMROOT.LANDevice.1.LANEthernetInterfaceConfig.1.MACAddress" "0" "get_lan_device_lan_ethernet_interface_config_macaddress" "" "" "1"
		common_execute_method_param "$DMROOT.LANDevice.1.LANEthernetInterfaceConfig.1.Status" "0" "get_lan_device_lan_ethernet_interface_config_status" "" "" "1"
		return 0
	}
	return $E_INVALID_PARAMETER_NAME;
}

sub_entry_landevice_LAN_Ethernet_Interface_Config_Stats() {
	local j="$2"
	local iface="$3"
	case_param "$1" belongto "$DMROOT.LANDevice.1.LANEthernetInterfaceConfig.1.Stats." && {
		common_execute_method_obj "$DMROOT.LANDevice.1.LANEthernetInterfaceConfig.1.Stats." "0" "" ""
		common_execute_method_param "$DMROOT.LANDevice.1.LANEthernetInterfaceConfig.1.Stats.BytesSent" "0" "get_lan_device_lan_ethernet_interface_config_stats_bytessent" "" "" "1"
		common_execute_method_param "$DMROOT.LANDevice.1.LANEthernetInterfaceConfig.1.Stats.BytesReceived" "0" "get_lan_device_lan_ethernet_interface_config_stats_bytesreceived" "" "" "1"
		common_execute_method_param "$DMROOT.LANDevice.1.LANEthernetInterfaceConfig.1.Stats.PacketsSent" "0" "get_lan_device_lan_ethernet_interface_config_stats_packetssent" "" "" "1"
		common_execute_method_param "$DMROOT.LANDevice.1.LANEthernetInterfaceConfig.1.Stats.PacketsReceived" "0" "get_lan_device_lan_ethernet_interface_config_stats_packetsreceived" "" "" "1"
		return 0
	}
	return $E_INVALID_PARAMETER_NAME;
}

sub_entry_landevice_LAN_Host_Config_Management(){
	local j="$2"
	local iface="$3"
	case_param "$1" belongto "$DMROOT.LANDevice.1.LANHostConfigManagement." && {
		common_execute_method_obj "$DMROOT.LANDevice.1.LANHostConfigManagement." "0" "" ""


		common_execute_method_param "$DMROOT.LANDevice.1.LANHostConfigManagement.MACAddress" "0" "get_lan_device_lan_host_config_management_mac_addr" "" ""
		common_execute_method_param "$DMROOT.LANDevice.1.LANHostConfigManagement.DHCPServerConfigurable" "1" "get_lan_device_lan_host_config_management_dhcp_server_configenable" "set_lan_device_lan_host_config_management_dhcp_server_configenable" "" 		
		common_execute_method_param "$DMROOT.LANDevice.1.LANHostConfigManagement.DHCPServerEnable" "1" "get_lan_device_lan_host_config_management_dhcp_server_enable" "set_lan_device_lan_host_config_management_dhcp_server_enable" "" "1"
		common_execute_method_param "$DMROOT.LANDevice.1.LANHostConfigManagement.DHCPRelay" "0" "get_lan_device_lan_host_config_management_dhcp_relay" "" "" "1"

		common_execute_method_param "$DMROOT.LANDevice.1.LANHostConfigManagement.MinAddress" "1" "get_lan_device_lan_host_config_management_min_address" "set_lan_device_lan_host_config_management_min_address" "" "1"
		common_execute_method_param "$DMROOT.LANDevice.1.LANHostConfigManagement.MaxAddress" "1" "get_lan_device_lan_host_config_management_max_address" "set_lan_device_lan_host_config_management_max_address" "" "1"
		common_execute_method_param "$DMROOT.LANDevice.1.LANHostConfigManagement.ReservedAddresses" "0" "" "" ""
		common_execute_method_param "$DMROOT.LANDevice.1.LANHostConfigManagement.SubnetMask" "1" "get_lan_device_lan_host_config_management_subnet_mask" "set_lan_device_lan_host_config_management_subnet_mask" ""
		common_execute_method_param "$DMROOT.LANDevice.1.LANHostConfigManagement.DNSServers" "1" "get_lan_device_lan_host_config_management_dns_servers" "set_lan_device_lan_host_config_management_dns_servers" ""
		common_execute_method_param "$DMROOT.LANDevice.1.LANHostConfigManagement.DomainName" "1" "get_lan_device_lan_host_config_management_domain_name" "set_lan_device_lan_host_config_management_domain_name" ""



		common_execute_method_param "$DMROOT.LANDevice.1.LANHostConfigManagement.DHCPLeaseTime" "1" "get_lan_device_lan_host_config_management_dhcp_lease_time" "set_lan_device_lan_host_config_management_dhcp_lease_time" "" "1"
		return 0 
	}
	return $E_INVALID_PARAMETER_NAME;
}

sub_entry_landevice_LAN_Host_Config_Management_Ip_Interface(){
	local j="$2"
	local iface="$3"
	case_param "$1" belongto "$DMROOT.LANDevice.1.LANHostConfigManagement.IPInterface.1." && {
		common_execute_method_obj "$DMROOT.LANDevice.1.LANHostConfigManagement.IPInterface.1." "0" "" ""
		common_execute_method_param "$DMROOT.LANDevice.1.LANHostConfigManagement.IPInterface.1.IPInterfaceIPAddress" "1" "get_lan_device_lan_host_config_management_ip_interface_ip_interface_ip_address" "set_lan_device_lan_host_config_management_ip_interface_ip_interface_ip_address" "" "1"
		common_execute_method_param "$DMROOT.LANDevice.1.LANHostConfigManagement.IPInterface.1.IPInterfaceSubnetMask" "0" "get_lan_device_lan_host_config_management_ip_interface_ip_interface_subnet_mask" "" "" "1"
		common_execute_method_param "$DMROOT.LANDevice.1.LANHostConfigManagement.IPInterface.1.IPInterfaceAddressingType" "0" "get_lan_device_lan_host_config_management_ip_interface_ip_interface_addressing_type" "" "" "1"
		return 0 
	}
	return $E_INVALID_PARAMETER_NAME;
}

#######################################
#     Data model browse instances     #
#######################################


lan_device_browse_instances_LAN_Ethernet_Interface_Number_Of_Entries(){
	sub_entry_landevic_LAN_Ethernet_Interface_Number_Of_Entries "$1" "1" "1"
	return 0
}

lan_device_browse_instances_wlan_iface() {
	local iface ifaces=`$UCI_SHOW wireless | grep "wireless\.@wifi-iface\[.*\]=wifi-iface" | awk -F'[.=]' '{print $2}'` 
	for iface in $ifaces; do
		local j=`lan_device_update_instance $iface`
		sub_entry_landevice_wlanconfig "$1" "$j" "$iface"
	done
	return 0
}

lan_device_browse_instances_LAN_Ethernet_Interface_Config() {
	sub_entry_landevice_LAN_Ethernet_Interface_Config "$1" "1" "1"
	return 0
}

lan_device_browse_instances_Hosts_Host() {
	sub_entry_landevice_Hosts_Host "$1" "1" "1"
	return 0
}

lan_device_browse_instances_LAN_Ethernet_Interface_Config_Stats(){
	sub_entry_landevice_LAN_Ethernet_Interface_Config_Stats "$1" "1" "1"
	return 0
}
 
lan_device_browse_instances_LAN_Host_Config_Management(){
	sub_entry_landevice_LAN_Host_Config_Management "$1" "1" "1"
	return 0
}

lan_device_browse_instances_LAN_Host_Config_Management_Ip_Interface(){
	sub_entry_landevice_LAN_Host_Config_Management_Ip_Interface "$1" "1" "1"
	return 0
}



#######################################
#   Data model parameters functions   #
#######################################


# sub_entry_landevic_LAN_Ethernet_Interface_Number_Of_Entries #
get_lan_device_lan_ethernet_interface_number_of_entries() {
	echo "1"
}

get_lan_device_lan_wlan_configuration_number_of_entries() {
	echo "4"
}

# sub_entry_landevice_LAN_Ethernet_Interface_Config #
get_lan_device_lan_ethernet_interface_config_status() {
local tmp
local val="Disable"

	tmp=`ifconfig $CWMP_LAN_IF |grep $CWMP_LAN_IF |awk '{print $2}'`
	if [ $tmp == "Link" ]; then
		val="NoLink"
	fi
	tmp=`ifconfig $CWMP_LAN_IF |grep "inet addr" |awk '{print $1}'`
	if [ $tmp == "inet" ]; then
		val="Up"
	fi
	echo "$val"
	
return 0	
}

get_lan_device_lan_ethernet_interface_config_macaddress() {
    local val=""
	#managemidapp -o cusconf -p {"\"StatusGetReq\"":{"\"Oper\"":"\"LAN\""}} -n LANMAC -u uci_tmp.lan_information.lan_mac > /tmp/mid_log
	val=`/usr/bin/uci get /tmp/uci_tmp.lan_information.lan_mac`
	echo "$val"
	return 0
}

# sub_entry_landevice_LAN_Ethernet_Interface_Config_Stats #
get_lan_device_lan_ethernet_interface_config_stats_bytessent(){
	local val=""
	val=`cat /proc/net/dev |grep $CWMP_LAN_IF: | awk '{print $10;}'`
	echo "$val"
	return 0
}

get_lan_device_lan_ethernet_interface_config_stats_bytesreceived(){
	local val=""
	val=`cat /proc/net/dev |grep $CWMP_LAN_IF: | awk '{print $2;}'`
	echo "$val"
	return 0
}

get_lan_device_lan_ethernet_interface_config_stats_packetssent(){
	local val=""
	val=`cat /proc/net/dev |grep $CWMP_LAN_IF: | awk '{print $11;}'`
	echo "$val"
	return 0
}

get_lan_device_lan_ethernet_interface_config_stats_packetsreceived(){
	local val=""
	val=`cat /proc/net/dev |grep $CWMP_LAN_IF: | awk '{print $3;}'`
	echo "$val"
	return 0
}

# sub_entry_landevice_LAN_Host_Config_Management #
get_lan_device_lan_host_config_management_dhcp_server_enable(){
    local cfgval=""
    cfgval=`uci get /etc/config/dhcp.lan.ignore`
    if [ "$cfgval" = "1" ];then
        echo "0"
    else
        echo "1"
    fi
    return 0
}
set_lan_device_lan_host_config_management_dhcp_server_enable(){
    local val=$1
    if [ "$val" = "1" ];then
        uci delete /etc/config/dhcp.lan.ignore
    elif [ "$val" = "0" ];then
        uci set /etc/config/dhcp.lan.ignore="1"        
    else
        return $E_INVALID_PARAMETER_VALUE
    fi
    uci commit /etc/config/dhcp
    /etc/init.d/dnsmasq restart
    /etc/init.d/odhcpd  restart
    return 0
}

get_lan_device_lan_host_config_management_min_address(){
    local lan_ip=`uci get network.lan.ipaddr`
    local lan_pre=`echo ${lan_ip%.*}`
    local start_base=`uci get dhcp.lan.start`
    local min_addr="$lan_pre"".""$start_base"
    echo $min_addr
}
set_lan_device_lan_host_config_management_min_address(){
   local setting_val=$1
   local lan_start=`echo ${setting_val##*.}`
   local lan_ip=`uci get network.lan.ipaddr`
   local lan_pre=`echo ${lan_ip%.*}`
   local min_addr="$lan_pre"".""$lan_start"

   uci set dhcp.lan.start="$lan_start"
   uci set network.lan.ipaddr="$min_addr"
   uci commit dhcp
   uci commit network
   return 0
}

get_lan_device_lan_host_config_management_max_address(){
    local lan_base=`uci get network.lan.ipaddr`
    local lan_pre=`echo ${lan_base%.*}`
    local lan_end=`echo ${lan_base##*.}`
    local limit_addr=`uci get dhcp.lan.limit`
    local max_ip=$(($limit_addr+$lan_end))
    local max_addr="$lan_pre"".""$max_ip"
    echo $max_addr
}
set_lan_device_lan_host_config_management_max_address(){
    local setting_val=$1
    local max_ip=`echo ${setting_val##*.}`
    local lan_base=`uci get network.lan.ipaddr`
    local lan_pre=`echo ${lan_base%.*}`
    local lan_end=`echo ${lan_base##*.}`
    local limit_addr=$(($max_ip-$lan_end))
    uci set dhcp.lan.limit="$limit_addr"
    uci commit network
    return 0
}

get_lan_device_lan_host_config_management_dhcp_lease_time(){
    local val=`uci get dhcp.lan.leasetime`
    if [ -n "$val" ]; then
        echo "$val"
    else
        echo "0"
    fi
}
set_lan_device_lan_host_config_management_dhcp_lease_time(){
    local val=$1
    uci set dhcp.lan.leasetime="$val"
    uci commit dhcp
    return 0
}

# sub_entry_landevice_LAN_Host_Config_Management_Ip_Interface #
get_lan_device_lan_host_config_management_ip_interface_ip_interface_ip_address() {
	local val=""
	#managemidapp -o cusconf -p {"\"StatusGetReq\"":{"\"Oper\"":"\"LAN\""}} -n IP -u uci_tmp.lan_information.lan_ip_address > /tmp/mid_log
	val=`/usr/bin/uci get /etc/config/lte-gw.local_param.local_ip_addr`
	echo "$val"
	return 0	
}
set_lan_device_lan_host_config_management_ip_interface_ip_interface_ip_address() {
	local val=$1
	#managemidapp -o cusconf -p {"\"ConfigSetReq\"":{"\"Oper\"":"\"LAN\"","\"LAN\"":{"\"IP\"":"\"$val\"","\"SubMask\"":"\"255.255.255.0\""}}} > /tmp/mid_log
	echo {"\"ConfigSetReq\"":{"\"Oper\"":"\"LAN\"","\"LAN\"":{"\"IP\"":"\"$val\"","\"SubMask\"":"\"255.255.255.0\""}}} | socat stdio /tmp/cusconf1
	/usr/bin/uci get /etc/config/lte-gw.local_param.local_ip_addr="$val"
}

get_lan_device_lan_host_config_management_ip_interface_ip_interface_subnet_mask() {
	local val=""
	#managemidapp -o cusconf -p {"\"StatusGetReq\"":{"\"Oper\"":"\"LAN\""}} -n SubMask -u uci_tmp.lan_information.lan_subnet_mask > /tmp/mid_log
	val=`/usr/bin/uci get /etc/config/lte-gw.local_param.local_ip_mask`
#	val=`$UCI_GET /tmp/network_status.lan_information.lan_subnet_mask`
	echo "$val"
	return 0	
}

get_lan_device_lan_host_config_management_ip_interface_ip_interface_addressing_type() {
	local val
	local tmp=""
	#managemidapp -o cusconf -p {"\"StatusGetReq\"":{"\"Oper\"":"\"LAN\""}} -n DHCPType -u uci_tmp.lan_information.dhcp_type > /tmp/mid_log
	tmp=`/usr/bin/uci get /etc/config/lte-gw.dhcp_srv.dhcp_enable`
	if [ "$tmp" = "enable" ]; then
		val="DHCP"
	else
		val="Static"	
	fi
	echo "$val"
return 0
}


lan_device_get_wlan_enable() {
	local val=`$UCI_GET wireless.wl0.disabled 2> /dev/null`
	[ "$val" = "1" ] && echo "0" || echo "1"
}

lan_device_set_wlan_enable() {
	local val="$1"
	common_set_bool "wireless.wl0.disabled" "$val" "0" "1"
	local e="$?"
	[ "$e" != "0" ] && return $e
	return 0
}

lan_device_set_wlan_cfg() {
	local cfg="$1"
	local val="$2"
	$UCI_SET $cfg="$val"
	return 0
}

lan_device_get_wlan_max_instance() {
	local max=`$UCI_SHOW wireless | grep "wireless\.@wifi-iface\[[0-9]\+\].instance=" | cut -d'=' -f2 | sed 's/[^0-9]*//g' | sort -nru | head -1`
	echo ${max:-0}
}

lan_device_update_instance() {
	local iface="$1"
	local instance=`$UCI_GET wireless.$iface.instance`
	if [ -z "$instance" ]; then
		instance=`lan_device_get_wlan_max_instance`
		$UCI_SET wireless.$iface.instance=$((++instance))
		$UCI_COMMIT
	fi
	echo $instance
}

lan_device_add_wlan_iface() {
	local instance=`lan_device_get_wlan_max_instance`
	local wifi_iface=`$UCI_ADD wireless wifi-iface`
	$UCI_SET wireless.$wifi_iface.device=wl0
	$UCI_SET wireless.$wifi_iface.encryption=none
	$UCI_SET wireless.$wifi_iface.mode=ap
	$UCI_SET wireless.$wifi_iface.ssid=DefaultSSID
	$UCI_SET wireless.$wifi_iface.instance=$((++instance))
	$UCI_COMMIT
	echo $instance
}

lan_device_delete_wlan_iface() {
	local iface="$1"
	$UCI_DELETE wireless.$iface
	$UCI_COMMIT
	return 0
}

get_lan_device_lan_host_config_management_mac_addr()
{
    local val=`ifconfig | grep eth1 | head -1 | awk '{print$5}'`
    echo $val
}

get_lan_device_lan_host_config_management_dhcp_server_configenable()
{
    echo "1"
}

get_lan_device_lan_host_config_management_dhcp_relay()
{
    echo "1"
}

get_lan_device_lan_host_config_management_subnet_mask()
{
    local val=`uci get network.lan.netmask`
    if [ -n "$val" ]; then
        echo "$val"
    else
        echo "0.0.0.0"
    fi
}

set_lan_device_lan_host_config_management_subnet_mask()
{
    local val=$1
    uci set network.lan.netmask="$val"
    uci commit network
    return 0
}

get_lan_device_lan_host_config_management_dns_servers()
{
    local val=`uci get network.lan.dns`
    if [ -n "$val" ]; then
        echo "$val"
    else
        echo "0.0.0.0"
    fi
}

set_lan_device_lan_host_config_management_dns_servers()
{
    local val=$1
    uci set network.lan.dns="$val"
    uci commit network
    return 0
}

get_lan_device_lan_ethernet_number_of_entries()
{
    echo "10"
}

get_lan_device_wlan_number_of_entries()
{
    echo "4"
}
