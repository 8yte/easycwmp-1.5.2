#!/bin/sh
# Copyright (C) 2015 PIVA Software <www.pivasoftware.com>
# 	Author: Michael.wu
#
#############################
#   Entry point functuons   #
#############################

prefix_list="$prefix_list $DMROOT.X_CT-COM_DNSQueryDiagnostics."
entry_execute_method_list="$entry_execute_method_list entry_execute_method_root_DNSQueryDiagnostics"

UCI_GET_VARSTATE="/sbin/uci -q ${UCI_CONFIG_DIR:+-c $UCI_CONFIG_DIR} -P /var/state get"
UCI_SET_VARSTATE="/sbin/uci -q ${UCI_CONFIG_DIR:+-c $UCI_CONFIG_DIR} -P /var/state set"

entry_execute_method_root_DNSQueryDiagnostics() {
	case "$1" in ""|"$DMROOT."|"$DMROOT.X_CT-COM_DNSQueryDiagnostics."*)
		common_execute_method_obj "$DMROOT.X_CT-COM_DNSQueryDiagnostics." "0"
		common_execute_method_param "$DMROOT.X_CT-COM_DNSQueryDiagnostics.DiagnosticsState" "1" "dnsquery_get easycwmp.@local[0].DiagnosticsState" "dnsquery_set_diagnostic_state"
		common_execute_method_param "$DMROOT.X_CT-COM_DNSQueryDiagnostics.Interface" "1" "dnsquery_get easycwmp.@local[0].Interface" "dnsquery_set easycwmp.@local[0].Interface"
		common_execute_method_param "$DMROOT.X_CT-COM_DNSQueryDiagnostics.DNSServerIP" "1" "dnsquery_get easycwmp.@local[0].DNSServerIP" "dnsquery_set easycwmp.@local[0].DNSServerIP"
		common_execute_method_param "$DMROOT.X_CT-COM_DNSQueryDiagnostics.DomainName" "1" "dnsquery_get easycwmp.@local[0].DomainName" "dnsquery_set easycwmp.@local[0].DomainName"
		common_execute_method_param "$DMROOT.X_CT-COM_DNSQueryDiagnostics.NumberOfRepetitions" "1" "dnsquery_get_numberrepet" "dnsquery_set easycwmp.@local[0].NumberOfRepetitions"
		common_execute_method_param "$DMROOT.X_CT-COM_DNSQueryDiagnostics.Timeout" "1" "dnsquery_get_timeout" "dnsquery_set easycwmp.@local[0].Timeout" "xsd:unsignedInt"
		common_execute_method_param "$DMROOT.X_CT-COM_DNSQueryDiagnostics.SuccessCount" "1" "dnsquery_get easycwmp.@local[0].SuccessCount" 
		common_execute_method_param "$DMROOT.X_CT-COM_DNSQueryDiagnostics.FailureCount" "1" "dnsquery_get easycwmp.@local[0].FailureCount" 
		common_execute_method_param "$DMROOT.X_CT-COM_DNSQueryDiagnostics.MinimumResponseTime" "1" "dnsquery_get easycwmp.@local[0].MinimumResponseTime" 
		common_execute_method_param "$DMROOT.X_CT-COM_DNSQueryDiagnostics.MaximumResponseTime" "1" "dnsquery_get easycwmp.@local[0].MaximumResponseTime" 
		common_execute_method_param "$DMROOT.X_CT-COM_DNSQueryDiagnostics.AverageResponseTime" "1" "dnsquery_get easycwmp.@local[0].AverageResponseTime" 
		common_execute_method_param "$DMROOT.X_CT-COM_DNSQueryDiagnostics.ResponseParaList" "1" "dnsquery_get easycwmp.@local[0].ResponseParaList" 

		return 0;
		;;
	esac
	return $E_INVALID_PARAMETER_NAME;
}

#######################################
#   Data model parameters functions   #
#######################################
dnsquery_get() {
	local val=`$UCI_GET_VARSTATE $1`
	echo ${val:-$2}
}

dnsquery_set() {
	dnsquery_stop_diagnostic
	if [ "`$UCI_GET_VARSTATE easycwmp.@local[0].DiagnosticsState`" != "Requested" ]; then
		$UCI_SET_VARSTATE easycwmp.@local[0].DiagnosticsState=None
	fi
	$UCI_SET_VARSTATE $1=$2
	return 0
}

dnsquery_set_diagnostic_state()
{
	local val="$1"
	case $val in 
		Requested)		
			dnsquery_stop_diagnostic
			$UCI_SET_VARSTATE easycwmp.@local[0].DiagnosticsState=Requested
			common_execute_command_in_apply_service "/bin/sh $FUNCTION_PATH/dnsquery_launch run &"
			return 0
		;;
	esac
	return $E_INVALID_PARAMETER_VALUE;    
}

dnsquery_stop_diagnostic() {
	local pids=`ps www | grep dnsquery| grep -v grep | awk '{print $2}'`
	if [ -n "$pids" ]; then
		kill -9 $pids
		$UCI_SET_VARSTATE easycwmp.@local[0].DiagnosticsState=None
	fi
}

dnsquery_get_numberrepet()
{
    local val= `uci get easycwmp.@local[0].NumberOfRepetitions`
    if [ "$val" != "" ]; then
    	echo "$val"
    else
        echo "5"
    fi
}

dnsquery_get_timeout()
{
    local val= `uci get easycwmp.@local[0].Timeout`
    if [ "$val" != "" ]; then
    	echo "$val"
    else
        echo "5000"
    fi
}

